---
layout: page
title: Tuesday, February 26th
sidebar: true
---

## Outline for Today

* How the Web Works
* How a Web Application Works
* How Databases Work
* SQL and Sequel
* Beginning TrafficSpy

## How the Web Works

### Key Ideas

* Client
* Request
  * Protocol
  * Verb
  * Address
* DNS Lookup
* IP Address
* Port
* Server
* Response
  * Header
  * Response Code
  * Body

### References

* HTTP Status Codes: http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html
* Apache HTTP Server: http://httpd.apache.org/
* Example HTTP Request/Response: http://www.jmarshall.com/easy/http/#requestline

## How an MVC Web Application Works

### Key Ideas

* Server IP and Port
* Receiving the Request - Router
* Processing the Request - Controller
* Business Logic & Database - Model
* Output Template - View
* Return HTML

## How Databases Work

### Key Ideas

* Databases are organized in tables
* Few tables, many rows
* Store, search, calculate, and sort
* We primarily `SELECT` data from and `INSERT` data into those tables
* Scope operations using `WHERE`
* Connect tables together using `INNER JOIN`
* Sort records with `ORDER BY`
* We create relationships between data including *one-to-one*, *one-to-many*, and *many-to-many*

## SQL and Sequel

### Sales Engine With a Database

This workshop examines using Sequel to manage the data and the relationships
found within the Sales Engine application.

* [Sequel](http://sequel.rubyforge.org/)
* [Sequel ActiveRecord Reference](http://sequel.rubyforge.org/rdoc/files/doc/active_record_rdoc.html)

#### Get the Repository

* Clone this [repository](https://github.com/gSchool/sales_engine-database)
* Install all the requirements in the Gemfile: `bundle install`

#### Customer

* Write: *Customer.find\_by\_first\_name* and *Customer.find\_by\_last_name*
* Write: *Customer.find\_all\_by\_first\_name* and *Customer.find\_all\_by\_last\_name*


#### Merchant

* Create the **merchants** table
* Define the *SalesEngine::Merchant* class
* Write the tests to validate: *#name*; *#created\_at*, *#updated\_at*
* Test and write: *Merchant.find\_by\_name*
* Test and write: *Merchant.find\_all\_by_name*
* Test and write: *Merchant#invoices*

#### Invoices

* Write the specs to validate: *#status*; *#created\_at*; *#updated\_at*
* Test and write: *Invoice.customer*
* Test and write: *Invoice.merchant*

## Beginning TrafficSpy

### Pairs

You'll complete TrafficSpy in the following pairs:

* Laura Steadman, Kareem Grant
* John Maddux, Shane Rogers
* Logan Sears, James Denman
* Erin Drummond, Kyle Suss
* Geoffrey Schorkopf, Bradley Sheehan
* Paul Blackwell, Josh Mejia
* Elaine Tai, Aimee Maher
* Phil Battos, Raphael Weiner
* Blair Anderson, Jorge Tellez
* Chelsea Komlo, Christopher Knight
* Danny Garcia, Jennifer Eliuk
* Ron Rateau, Daniel Mee
